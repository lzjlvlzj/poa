<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:db.properties"/>
    </bean>
    <!-- redis -->
    
   <!--  
   <context:property-placeholder location="classpath:redis.properties" />  
    -->
  	<!-- 
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="200" />  
        <property name="maxActive" value="1024" />  
        <property name="maxWait" value="1000" />  
        <property name="testOnBorrow" value="true" />  
    </bean>  
    
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
       <property name="hostName" value="127.0.0.1"></property>
       <property name="port" value="6379"></property>
       <property name="poolConfig" ref="jedisPoolConfig"></property>
    </bean>  
    
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean>
      -->
     <!-- mysql data pool -->
     <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">  
        <property name="jdbcUrl" value="${jdbc.url}"></property>  
        <property name="driverClass" value="${jdbc.driver}"></property>  
        <property name="user" value="${jdbc.username}"></property>  
        <property name="password" value="${jdbc.password}"></property>  
        <property name="maxPoolSize" value="40"></property>  
        <property name="minPoolSize" value="1"></property>  
        <property name="initialPoolSize" value="1"></property>  
        <property name="maxIdleTime" value="20"></property>  
    </bean> 
    
    
     <!-- session工厂 -->  
    <bean id="sessionFactory"  
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource">  
            <ref bean="dataSource" />  
        </property>  
        <property name="configLocation" value="classpath:hibernate/hibernate.cfg.xml"/>  
        <property name="packagesToScan">  
            <list>  
                <value>org.lzj.poa.entity</value>  
            </list>  
        </property>
    </bean>
    
    <!-- spring 事务 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">   
		<property name="transactionManager">   
			<ref local="transactionManager"/>   
		</property>   
		<property name="transactionAttributes">   
			<props>  
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			    <prop key="add*">PROPAGATION_REQUIRED</prop>
			    <prop key="update*">PROPAGATION_REQUIRED</prop>
			    <prop key="save*">PROPAGATION_REQUIRED</prop>
			    <prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>   
		</property> 
	</bean>
	
	<bean id="ServiceAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">   
		<property name="proxyTargetClass" value="true"></property>   
		<property name="beanNames">   
			<list>   
				<value>*ServiceImpl</value> 
			</list>   
		</property>    
		<property name="interceptorNames">   
			<list>    
				<value>transactionInterceptor</value>
			</list>   
		</property>   
	</bean> 
   
    
</beans>
